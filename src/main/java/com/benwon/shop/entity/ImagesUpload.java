/*
 * This file is generated by jOOQ.
 */
package com.benwon.shop.entity;


import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * 上傳圖檔
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "images_upload", schema = "shop", uniqueConstraints = {
    @UniqueConstraint(name = "KEY_images_upload_PRIMARY", columnNames = {"id"})
}, indexes = {
    @Index(name = "PRIMARY", unique = true, columnList = "id ASC")
})
public class ImagesUpload implements Serializable {

    private static final long serialVersionUID = -1077916479;

    private Long          id;
    private String        bucketName;
    private String        fileName;
    private Integer       isOriginal;
    private Integer       isDefaultSize;
    private Long          refImageId;
    private String        resourceUrl;
    private String        uploadChannel;
    private Integer       imageResizeDef;
    private Integer       imageWidth;
    private Double        imageSizeKb;
    private String        createdBy;
    private LocalDateTime createdDate;
    private String        lastModifiedBy;
    private LocalDateTime lastModifiedDate;

    public ImagesUpload() {}

    public ImagesUpload(ImagesUpload value) {
        this.id = value.id;
        this.bucketName = value.bucketName;
        this.fileName = value.fileName;
        this.isOriginal = value.isOriginal;
        this.isDefaultSize = value.isDefaultSize;
        this.refImageId = value.refImageId;
        this.resourceUrl = value.resourceUrl;
        this.uploadChannel = value.uploadChannel;
        this.imageResizeDef = value.imageResizeDef;
        this.imageWidth = value.imageWidth;
        this.imageSizeKb = value.imageSizeKb;
        this.createdBy = value.createdBy;
        this.createdDate = value.createdDate;
        this.lastModifiedBy = value.lastModifiedBy;
        this.lastModifiedDate = value.lastModifiedDate;
    }

    public ImagesUpload(
        Long          id,
        String        bucketName,
        String        fileName,
        Integer       isOriginal,
        Integer       isDefaultSize,
        Long          refImageId,
        String        resourceUrl,
        String        uploadChannel,
        Integer       imageResizeDef,
        Integer       imageWidth,
        Double        imageSizeKb,
        String        createdBy,
        LocalDateTime createdDate,
        String        lastModifiedBy,
        LocalDateTime lastModifiedDate
    ) {
        this.id = id;
        this.bucketName = bucketName;
        this.fileName = fileName;
        this.isOriginal = isOriginal;
        this.isDefaultSize = isDefaultSize;
        this.refImageId = refImageId;
        this.resourceUrl = resourceUrl;
        this.uploadChannel = uploadChannel;
        this.imageResizeDef = imageResizeDef;
        this.imageWidth = imageWidth;
        this.imageSizeKb = imageSizeKb;
        this.createdBy = createdBy;
        this.createdDate = createdDate;
        this.lastModifiedBy = lastModifiedBy;
        this.lastModifiedDate = lastModifiedDate;
    }

    @Id
    @Column(name = "id", nullable = false, precision = 19)
    @NotNull
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Column(name = "bucket_name", nullable = false, length = 50)
    @NotNull
    @Size(max = 50)
    public String getBucketName() {
        return this.bucketName;
    }

    public void setBucketName(String bucketName) {
        this.bucketName = bucketName;
    }

    @Column(name = "file_name", nullable = false, length = 200)
    @NotNull
    @Size(max = 200)
    public String getFileName() {
        return this.fileName;
    }

    public void setFileName(String fileName) {
        this.fileName = fileName;
    }

    @Column(name = "is_original", nullable = false, precision = 10)
    @NotNull
    public Integer getIsOriginal() {
        return this.isOriginal;
    }

    public void setIsOriginal(Integer isOriginal) {
        this.isOriginal = isOriginal;
    }

    @Column(name = "is_default_size", nullable = false, precision = 10)
    @NotNull
    public Integer getIsDefaultSize() {
        return this.isDefaultSize;
    }

    public void setIsDefaultSize(Integer isDefaultSize) {
        this.isDefaultSize = isDefaultSize;
    }

    @Column(name = "ref_image_id", precision = 19)
    public Long getRefImageId() {
        return this.refImageId;
    }

    public void setRefImageId(Long refImageId) {
        this.refImageId = refImageId;
    }

    @Column(name = "resource_url", nullable = false, length = 300)
    @NotNull
    @Size(max = 300)
    public String getResourceUrl() {
        return this.resourceUrl;
    }

    public void setResourceUrl(String resourceUrl) {
        this.resourceUrl = resourceUrl;
    }

    @Column(name = "upload_channel", nullable = false, length = 30)
    @NotNull
    @Size(max = 30)
    public String getUploadChannel() {
        return this.uploadChannel;
    }

    public void setUploadChannel(String uploadChannel) {
        this.uploadChannel = uploadChannel;
    }

    @Column(name = "image_resize_def", nullable = false, precision = 10)
    @NotNull
    public Integer getImageResizeDef() {
        return this.imageResizeDef;
    }

    public void setImageResizeDef(Integer imageResizeDef) {
        this.imageResizeDef = imageResizeDef;
    }

    @Column(name = "image_width", nullable = false, precision = 10)
    @NotNull
    public Integer getImageWidth() {
        return this.imageWidth;
    }

    public void setImageWidth(Integer imageWidth) {
        this.imageWidth = imageWidth;
    }

    @Column(name = "image_size_kb", nullable = false, precision = 22)
    @NotNull
    public Double getImageSizeKb() {
        return this.imageSizeKb;
    }

    public void setImageSizeKb(Double imageSizeKb) {
        this.imageSizeKb = imageSizeKb;
    }

    @Column(name = "created_by", nullable = false, length = 60)
    @NotNull
    @Size(max = 60)
    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Column(name = "created_date", nullable = false)
    @NotNull
    public LocalDateTime getCreatedDate() {
        return this.createdDate;
    }

    public void setCreatedDate(LocalDateTime createdDate) {
        this.createdDate = createdDate;
    }

    @Column(name = "last_modified_by", nullable = false, length = 60)
    @NotNull
    @Size(max = 60)
    public String getLastModifiedBy() {
        return this.lastModifiedBy;
    }

    public void setLastModifiedBy(String lastModifiedBy) {
        this.lastModifiedBy = lastModifiedBy;
    }

    @Column(name = "last_modified_date", nullable = false)
    @NotNull
    public LocalDateTime getLastModifiedDate() {
        return this.lastModifiedDate;
    }

    public void setLastModifiedDate(LocalDateTime lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
    }
}
